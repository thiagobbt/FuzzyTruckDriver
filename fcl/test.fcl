FUNCTION_BLOCK driver

VAR_INPUT
	x: REAL;
	y: REAL;
	angle: REAL;
END_VAR

VAR_OUTPUT
	out_angle: REAL;
END_VAR

FUZZIFY x
  TERM left  := trian 0.0 0.2 0.5;
  TERM mid 	 := trian 0.4 0.5 0.6;
  TERM right := trian 0.5 0.8 1.0;
END_FUZZIFY

FUZZIFY y
  TERM up		 := trian 0	  2.5 5;
  TERM mid 	 := trian 2.5 5   7.5;
  TERM down := trian 5   7.5 10;
END_FUZZIFY

FUZZIFY angle
  TERM low := trian 0 40 90;
  TERM mid := trian 70 90 110;
  TERM high := trian 90 140 180;
  TERM way_too_much_mate:= trian 180 270 280;
  TERM way_too_little_mate:= trian 260 280 360;
END_FUZZIFY

DEFUZZIFY out_angle
    TERM keep := trian -0.3 0 0.3;
    TERM low := trian -1 -0.5 0;
    TERM high := trian 0 0.5 1;
    METHOD : COG;        // Use 'Center Of Gravity' defuzzification method
    DEFAULT := 0;        // Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 0 : IF angle IS way_too_much_mate THEN out_angle IS low;
	RULE 0.1 : IF angle IS way_too_little_mate THEN out_angle IS high;
	RULE 1 : IF x IS mid AND angle IS mid THEN out_angle IS keep;
	RULE 2 : IF x IS mid AND angle IS high THEN out_angle IS low;
	RULE 3 : IF x IS mid AND angle IS low THEN out_angle IS high;
	RULE 4 : IF x IS left AND (angle IS low OR angle IS mid) THEN out_angle IS high;
	//RULE 4.1 : IF x IS left AND angle IS high THEN out_angle IS keep;
	RULE 5 : IF x IS right AND (angle IS high OR angle IS mid) THEN out_angle IS low;
	//RULE 5.1 : IF x IS left AND angle IS low THEN out_angle IS keep;
END_RULEBLOCK

END_FUNCTION_BLOCK