FUNCTION_BLOCK driver

VAR_INPUT
	x: REAL;
	y: REAL;
	angle: REAL;
END_VAR

VAR_OUTPUT
	out_angle: REAL;
END_VAR

FUZZIFY x
  TERM left  := TRIAN -0.5 0.0 0.45;
  TERM mid 	 := TRIAN 0.3 0.5 0.7;
  TERM leftmid := TRIAN 0.4 0.485 0.485;
  TERM perfect := TRIAN 0.48 0.5 0.52;
  TERM rightmid := TRIAN 0.515 0.515 0.6;
  TERM right := TRIAN 0.55 1.0 1.5;
END_FUZZIFY

FUZZIFY y
  TERM up  := TRIAN -0.5 0.0 0.45;
  TERM mid 	 := TRIAN 0.3 0.5 0.7;
  TERM down := TRIAN 0.55 1.0 1.5;
END_FUZZIFY

FUZZIFY angle
  TERM SW := TRIAN 0 45 90;
  TERM S  := TRIAN 70 90 110;
  TERM SE := TRIAN 90 135 180;
  TERM EA  := TRIAN 170 180 190;
  TERM NE := TRIAN 180 225 270;
  TERM N  := TRIAN 260 270 290;
  TERM NW := TRIAN 270 315 360;
  TERM W  := (0, 1) (10, 0) (350, 0) (360, 1);
END_FUZZIFY

DEFUZZIFY out_angle
	TERM veryright := TRIAN -1 -1 -0.8;
	TERM right := TRIAN -1 -1 -0.1;
	TERM kindaright := TRIAN -0.3 -0.3 0;
    TERM keep := TRIAN -0.2 0 0.2;
    TERM veryleft := TRIAN 0.8 1 1;
    TERM left := TRIAN 0.1 1 1;
    TERM kindaleft := TRIAN 0 0.3 0.3;
    METHOD : COA;
    DEFAULT := 0;
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;
	ACT : MIN;
	ACCU : MAX;

//	RULE A : IF x IS left AND y IS mid AND angle IS SW THEN out_angle IS right;
//	RULE A : IF x IS left AND y IS mid AND angle IS NW THEN out_angle IS right;
//	RULE A : IF x IS left AND y IS up AND angle IS NE THEN out_angle IS right;
//	RULE A : IF x IS left AND y IS up AND angle IS SE THEN out_angle IS keep;

	RULE A : IF x IS left AND angle IS S THEN out_angle IS veryleft;
	RULE A : IF x IS left AND angle IS SE THEN out_angle IS left;
	RULE A : IF x IS left AND angle IS SW THEN out_angle IS left;
	RULE A : IF x IS left AND angle IS N THEN out_angle IS veryright;
	RULE A : IF x IS left AND angle IS EA THEN out_angle IS right;
	RULE A : IF x IS left AND angle IS W THEN out_angle IS veryleft;
	
	RULE A : IF x IS right AND angle IS N THEN out_angle IS veryleft;
	RULE A : IF x IS right AND angle IS NW THEN out_angle IS veryleft;
	RULE A : IF x IS right AND angle IS S THEN out_angle IS veryright;
	RULE A : IF x IS right AND y IS NOT down AND angle IS SW THEN out_angle IS keep;
	RULE A : IF x IS right AND y IS down AND angle IS SW THEN out_angle IS right;
	
	RULE A : IF x IS mid AND angle IS NE THEN out_angle IS veryright;
	RULE A : IF x IS mid AND angle IS SE THEN out_angle IS right;
	RULE A : IF x IS mid AND angle IS NW THEN out_angle IS veryleft;
	RULE A : IF x IS mid AND angle IS SW THEN out_angle IS left;
	RULE A : IF x IS mid AND angle IS N THEN out_angle IS veryleft;
	RULE A : IF x IS mid AND angle IS W THEN out_angle IS veryleft;
	RULE A : IF x IS mid AND angle IS EA THEN out_angle IS veryright;
	
	RULE A : IF x IS leftmid AND angle IS S THEN out_angle IS kindaleft;
	RULE A : IF x IS rightmid AND angle IS S THEN out_angle IS kindaright;
	
//	RULE A : IF x IS leftmid AND y IS down AND angle IS S THEN out_angle IS left;
//	RULE A : IF x IS rightmid AND y IS down  AND angle IS S THEN out_angle IS right;
	
	RULE A : IF x IS perfect AND angle IS S THEN out_angle IS keep WITH 100;
	
	//RULE 0 : IF angle IS very_high THEN out_angle IS low;
	//RULE 0.1 : IF angle IS very_low THEN out_angle IS high;
//	RULE 0 : IF x IS left AND y IS down AND angle IS NOT SW THEN out_angle IS left;
//	RULE A : IF x IS right AND y IS down AND angle IS NOT SE THEN out_angle IS right;
//	RULE 1 : IF x IS mid AND angle IS S THEN out_angle IS keep;
//	RULE 2 : IF x IS mid AND angle IS SE THEN out_angle IS left;
//	RULE 3 : IF x IS mid AND angle IS SW THEN out_angle IS right;
//	RULE 4 : IF x IS left AND (angle IS SW OR angle IS S) THEN out_angle IS right;
//	//RULE 4.1 : IF x IS left AND angle IS high THEN out_angle IS keep;
//	RULE 5 : IF x IS right AND (angle IS SE OR angle IS S) THEN out_angle IS left;
//	//RULE 5.1 : IF x IS left AND angle IS low THEN out_angle IS keep;
END_RULEBLOCK

END_FUNCTION_BLOCK